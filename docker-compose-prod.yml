version: "3.8"

services:
  api:
    build:
      dockerfile: Dockerfile.prod
      context: ./api
      # Only build development stage from Dockerfile
    # Mount our host dir to the docker container  
    # Mount api directory (./api) to (:) docker container (/app)
    # Reflect File changes from host to container
    volumes:
      - ./api:/app
      - ./api/node_modules:/app/node_modules
      - rgpfiles:/app/uploaded-files
    # RUN in debug mode: npm run start:debug
    # RUN in dev mode npm run start:dev
    command: npm run start:prod
    depends_on:
      - postgres
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@rgp-db:5432/rgpdb
      FILEUPLOAD_LOCATION: /app/uploaded-files
      FILEUPOAD_SIZE_LIMIT: 512000
      JWT_KEY: R06!nHo@d
      JWT_EXPIRES: 24h
      PORT: 3001
    ports:
      - 30001:3001
    networks:  
      - local

  postgres:
    image: postgres:14
    restart: always
    container_name: rgp-db
    volumes:
      - rgpdata:/var/lib/postgresql/data
    networks:  
      - local
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: rgpdb
    ports:
      - 35000:5432
  
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: pgadmin
    networks:  
      - local
    environment:
      PGADMIN_DEFAULT_EMAIL: user@domain.com
      PGADMIN_DEFAULT_PASSWORD: R6PD8@dmin
    ports:
      - 9080:80

  frontend:
    build:
      dockerfile: Dockerfile.prod
      context: ./frontend
    command: ng serve --configuration production
    depends_on:
      - api
    volumes:
      - ./frontend:/dist/src/app
      - /dist/src/app/node_modules
    ports:
      - 8080:4200
    networks:  
      - local

networks:
  local:

volumes:
    rgpdata:
      external: true
    rgpfiles:
      external: true